// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: takler_protocol/takler.proto

package takler_protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag    int32  `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ServiceResponse) Reset() {
	*x = ServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponse) ProtoMessage() {}

func (x *ServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponse.ProtoReflect.Descriptor instead.
func (*ServiceResponse) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceResponse) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *ServiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChildCommandOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodePath string `protobuf:"bytes,1,opt,name=node_path,json=nodePath,proto3" json:"node_path,omitempty"`
}

func (x *ChildCommandOptions) Reset() {
	*x = ChildCommandOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildCommandOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildCommandOptions) ProtoMessage() {}

func (x *ChildCommandOptions) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildCommandOptions.ProtoReflect.Descriptor instead.
func (*ChildCommandOptions) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{1}
}

func (x *ChildCommandOptions) GetNodePath() string {
	if x != nil {
		return x.NodePath
	}
	return ""
}

type InitCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildOptions *ChildCommandOptions `protobuf:"bytes,1,opt,name=child_options,json=childOptions,proto3" json:"child_options,omitempty"`
	TaskId       string               `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *InitCommand) Reset() {
	*x = InitCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitCommand) ProtoMessage() {}

func (x *InitCommand) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitCommand.ProtoReflect.Descriptor instead.
func (*InitCommand) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{2}
}

func (x *InitCommand) GetChildOptions() *ChildCommandOptions {
	if x != nil {
		return x.ChildOptions
	}
	return nil
}

func (x *InitCommand) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type CompleteCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildOptions *ChildCommandOptions `protobuf:"bytes,1,opt,name=child_options,json=childOptions,proto3" json:"child_options,omitempty"`
}

func (x *CompleteCommand) Reset() {
	*x = CompleteCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteCommand) ProtoMessage() {}

func (x *CompleteCommand) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteCommand.ProtoReflect.Descriptor instead.
func (*CompleteCommand) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{3}
}

func (x *CompleteCommand) GetChildOptions() *ChildCommandOptions {
	if x != nil {
		return x.ChildOptions
	}
	return nil
}

type AbortCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildOptions *ChildCommandOptions `protobuf:"bytes,1,opt,name=child_options,json=childOptions,proto3" json:"child_options,omitempty"`
	Reason       string               `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AbortCommand) Reset() {
	*x = AbortCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortCommand) ProtoMessage() {}

func (x *AbortCommand) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortCommand.ProtoReflect.Descriptor instead.
func (*AbortCommand) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{4}
}

func (x *AbortCommand) GetChildOptions() *ChildCommandOptions {
	if x != nil {
		return x.ChildOptions
	}
	return nil
}

func (x *AbortCommand) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type EventCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildOptions *ChildCommandOptions `protobuf:"bytes,1,opt,name=child_options,json=childOptions,proto3" json:"child_options,omitempty"`
	EventName    string               `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
}

func (x *EventCommand) Reset() {
	*x = EventCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCommand) ProtoMessage() {}

func (x *EventCommand) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCommand.ProtoReflect.Descriptor instead.
func (*EventCommand) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{5}
}

func (x *EventCommand) GetChildOptions() *ChildCommandOptions {
	if x != nil {
		return x.ChildOptions
	}
	return nil
}

func (x *EventCommand) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

type MeterCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildOptions *ChildCommandOptions `protobuf:"bytes,1,opt,name=child_options,json=childOptions,proto3" json:"child_options,omitempty"`
	MeterName    string               `protobuf:"bytes,2,opt,name=meter_name,json=meterName,proto3" json:"meter_name,omitempty"`
	MeterValue   string               `protobuf:"bytes,3,opt,name=meter_value,json=meterValue,proto3" json:"meter_value,omitempty"`
}

func (x *MeterCommand) Reset() {
	*x = MeterCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterCommand) ProtoMessage() {}

func (x *MeterCommand) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterCommand.ProtoReflect.Descriptor instead.
func (*MeterCommand) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{6}
}

func (x *MeterCommand) GetChildOptions() *ChildCommandOptions {
	if x != nil {
		return x.ChildOptions
	}
	return nil
}

func (x *MeterCommand) GetMeterName() string {
	if x != nil {
		return x.MeterName
	}
	return ""
}

func (x *MeterCommand) GetMeterValue() string {
	if x != nil {
		return x.MeterValue
	}
	return ""
}

type RequeueCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodePath string `protobuf:"bytes,1,opt,name=node_path,json=nodePath,proto3" json:"node_path,omitempty"`
}

func (x *RequeueCommand) Reset() {
	*x = RequeueCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequeueCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequeueCommand) ProtoMessage() {}

func (x *RequeueCommand) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequeueCommand.ProtoReflect.Descriptor instead.
func (*RequeueCommand) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{7}
}

func (x *RequeueCommand) GetNodePath() string {
	if x != nil {
		return x.NodePath
	}
	return ""
}

type ShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowRequest) Reset() {
	*x = ShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowRequest) ProtoMessage() {}

func (x *ShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowRequest.ProtoReflect.Descriptor instead.
func (*ShowRequest) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{8}
}

type ShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *ShowResponse) Reset() {
	*x = ShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_takler_protocol_takler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowResponse) ProtoMessage() {}

func (x *ShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_takler_protocol_takler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowResponse.ProtoReflect.Descriptor instead.
func (*ShowResponse) Descriptor() ([]byte, []int) {
	return file_takler_protocol_takler_proto_rawDescGZIP(), []int{9}
}

func (x *ShowResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

var File_takler_protocol_takler_proto protoreflect.FileDescriptor

var file_takler_protocol_takler_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22,
	0x3f, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x32, 0x0a, 0x13, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x71, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x61, 0x6b,
	0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x71, 0x0a, 0x0c, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74,
	0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x61, 0x6b,
	0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d,
	0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x0d, 0x0a,
	0x0b, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x0c,
	0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x32, 0xeb, 0x04, 0x0a, 0x0c, 0x54, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x69, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x20, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x12, 0x52, 0x75, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x20, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x1a, 0x20, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x20, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x52,
	0x75, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d,
	0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x20, 0x2e,
	0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x54, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x1a, 0x20, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x74,
	0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x20, 0x2e,
	0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x65, 0x72, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x6f, 0x63, 0x2f, 0x74, 0x61, 0x6b, 0x6c,
	0x65, 0x72, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x61, 0x6b, 0x6c, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_takler_protocol_takler_proto_rawDescOnce sync.Once
	file_takler_protocol_takler_proto_rawDescData = file_takler_protocol_takler_proto_rawDesc
)

func file_takler_protocol_takler_proto_rawDescGZIP() []byte {
	file_takler_protocol_takler_proto_rawDescOnce.Do(func() {
		file_takler_protocol_takler_proto_rawDescData = protoimpl.X.CompressGZIP(file_takler_protocol_takler_proto_rawDescData)
	})
	return file_takler_protocol_takler_proto_rawDescData
}

var file_takler_protocol_takler_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_takler_protocol_takler_proto_goTypes = []interface{}{
	(*ServiceResponse)(nil),     // 0: takler_protocol.ServiceResponse
	(*ChildCommandOptions)(nil), // 1: takler_protocol.ChildCommandOptions
	(*InitCommand)(nil),         // 2: takler_protocol.InitCommand
	(*CompleteCommand)(nil),     // 3: takler_protocol.CompleteCommand
	(*AbortCommand)(nil),        // 4: takler_protocol.AbortCommand
	(*EventCommand)(nil),        // 5: takler_protocol.EventCommand
	(*MeterCommand)(nil),        // 6: takler_protocol.MeterCommand
	(*RequeueCommand)(nil),      // 7: takler_protocol.RequeueCommand
	(*ShowRequest)(nil),         // 8: takler_protocol.ShowRequest
	(*ShowResponse)(nil),        // 9: takler_protocol.ShowResponse
}
var file_takler_protocol_takler_proto_depIdxs = []int32{
	1,  // 0: takler_protocol.InitCommand.child_options:type_name -> takler_protocol.ChildCommandOptions
	1,  // 1: takler_protocol.CompleteCommand.child_options:type_name -> takler_protocol.ChildCommandOptions
	1,  // 2: takler_protocol.AbortCommand.child_options:type_name -> takler_protocol.ChildCommandOptions
	1,  // 3: takler_protocol.EventCommand.child_options:type_name -> takler_protocol.ChildCommandOptions
	1,  // 4: takler_protocol.MeterCommand.child_options:type_name -> takler_protocol.ChildCommandOptions
	2,  // 5: takler_protocol.TaklerServer.RunInitCommand:input_type -> takler_protocol.InitCommand
	3,  // 6: takler_protocol.TaklerServer.RunCompleteCommand:input_type -> takler_protocol.CompleteCommand
	4,  // 7: takler_protocol.TaklerServer.RunAbortCommand:input_type -> takler_protocol.AbortCommand
	5,  // 8: takler_protocol.TaklerServer.RunEventCommand:input_type -> takler_protocol.EventCommand
	6,  // 9: takler_protocol.TaklerServer.RunMeterCommand:input_type -> takler_protocol.MeterCommand
	7,  // 10: takler_protocol.TaklerServer.RunRequeueCommand:input_type -> takler_protocol.RequeueCommand
	8,  // 11: takler_protocol.TaklerServer.RunShowRequest:input_type -> takler_protocol.ShowRequest
	0,  // 12: takler_protocol.TaklerServer.RunInitCommand:output_type -> takler_protocol.ServiceResponse
	0,  // 13: takler_protocol.TaklerServer.RunCompleteCommand:output_type -> takler_protocol.ServiceResponse
	0,  // 14: takler_protocol.TaklerServer.RunAbortCommand:output_type -> takler_protocol.ServiceResponse
	0,  // 15: takler_protocol.TaklerServer.RunEventCommand:output_type -> takler_protocol.ServiceResponse
	0,  // 16: takler_protocol.TaklerServer.RunMeterCommand:output_type -> takler_protocol.ServiceResponse
	0,  // 17: takler_protocol.TaklerServer.RunRequeueCommand:output_type -> takler_protocol.ServiceResponse
	9,  // 18: takler_protocol.TaklerServer.RunShowRequest:output_type -> takler_protocol.ShowResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_takler_protocol_takler_proto_init() }
func file_takler_protocol_takler_proto_init() {
	if File_takler_protocol_takler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_takler_protocol_takler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildCommandOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeterCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequeueCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_takler_protocol_takler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_takler_protocol_takler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_takler_protocol_takler_proto_goTypes,
		DependencyIndexes: file_takler_protocol_takler_proto_depIdxs,
		MessageInfos:      file_takler_protocol_takler_proto_msgTypes,
	}.Build()
	File_takler_protocol_takler_proto = out.File
	file_takler_protocol_takler_proto_rawDesc = nil
	file_takler_protocol_takler_proto_goTypes = nil
	file_takler_protocol_takler_proto_depIdxs = nil
}
